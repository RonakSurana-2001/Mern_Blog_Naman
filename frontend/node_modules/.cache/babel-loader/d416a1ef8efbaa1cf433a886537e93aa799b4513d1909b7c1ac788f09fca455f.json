{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\projects\\\\mern_blog_naman (1) (4)\\\\mern_blog_naman (1)\\\\mern_blog_naman\\\\frontend\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const navigate = Navigate(); // Use Navigate as a component\n\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set(\"title\", title);\n    data.set(\"summary\", summary);\n    data.set(\"content\", content);\n    data.set('file', files[0]);\n    data.set('password', localStorage.getItem(\"token\"));\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: newValue => setContent(newValue),\n      modules: modules,\n      formats: formats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"H7bX6DgKjSOi9Ut5boOnB32/eoo=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","ReactQuill","Navigate","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","navigate","createNewPost","ev","data","FormData","set","localStorage","getItem","preventDefault","response","fetch","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","newValue","modules","formats","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/projects/mern_blog_naman (1) (4)/mern_blog_naman (1)/mern_blog_naman/frontend/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const navigate = Navigate(); // Use Navigate as a component\r\n\r\n  async function createNewPost(ev) {\r\n    const data = new FormData();\r\n    data.set(\"title\", title);\r\n    data.set(\"summary\", summary);\r\n    data.set(\"content\", content);\r\n    data.set('file', files[0]);\r\n    data.set('password', localStorage.getItem(\"token\"));\r\n    ev.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:4000/post', {\r\n      method: 'POST',\r\n      body: data,\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (response.ok) {\r\n      setRedirect(true);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input type='text' placeholder='Title' value={title} onChange={ev => setTitle(ev.target.value)} />\r\n      <input type='text' placeholder='Summary' value={summary} onChange={ev => setSummary(ev.target.value)} />\r\n      <input type='file' onChange={ev => setFiles(ev.target.files)} />\r\n      <ReactQuill value={content} onChange={newValue => setContent(newValue)} modules={modules} formats={formats} />\r\n      <button style={{ marginTop: \"10px\" }}>Create Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
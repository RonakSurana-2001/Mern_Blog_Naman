{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\projects\\\\mern_blog_naman (1) (4)\\\\mern_blog_naman (1)\\\\mern_blog_naman\\\\frontend\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const history = useHistory();\n  const createNewPost = async ev => {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set(\"title\", title);\n    data.set(\"summary\", summary);\n    data.set(\"content\", content);\n    if (files && files.length > 0) {\n      data.set('file', files[0]);\n    }\n    data.set('password', localStorage.getItem(\"token\"));\n    try {\n      const response = await fetch('http://localhost:4000/post', {\n        method: 'POST',\n        body: data,\n        credentials: \"include\"\n      });\n      if (response.ok) {\n        setRedirect(true);\n      } else {\n        console.error('Failed to create post:', response.status);\n        // Handle the error, show a message, or perform other actions\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      // Handle the error, show a message, or perform other actions\n    }\n  };\n  if (redirect) {\n    history.push('/');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: newValue => setContent(newValue),\n      modules: modules,\n      formats: formats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"nUcrcoKnlfodrBqKM3YUkEwXgoc=\", false, function () {\n  return [useHistory];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","ReactQuill","useHistory","jsxDEV","_jsxDEV","modules","toolbar","formats","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","history","createNewPost","ev","preventDefault","data","FormData","set","length","localStorage","getItem","response","fetch","method","body","credentials","ok","console","error","status","push","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","newValue","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/projects/mern_blog_naman (1) (4)/mern_blog_naman (1)/mern_blog_naman/frontend/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, false] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nconst formats = [\r\n  'header',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image'\r\n];\r\n\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const createNewPost = async (ev) => {\r\n    ev.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.set(\"title\", title);\r\n    data.set(\"summary\", summary);\r\n    data.set(\"content\", content);\r\n\r\n    if (files && files.length > 0) {\r\n      data.set('file', files[0]);\r\n    }\r\n\r\n    data.set('password', localStorage.getItem(\"token\"));\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/post', {\r\n        method: 'POST',\r\n        body: data,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        setRedirect(true);\r\n      } else {\r\n        console.error('Failed to create post:', response.status);\r\n        // Handle the error, show a message, or perform other actions\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      // Handle the error, show a message, or perform other actions\r\n    }\r\n  };\r\n\r\n  if (redirect) {\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input type='text' placeholder='Title' value={title} onChange={(ev) => setTitle(ev.target.value)} />\r\n      <input type='text' placeholder='Summary' value={summary} onChange={(ev) => setSummary(ev.target.value)} />\r\n      <input type='file' onChange={(ev) => setFiles(ev.target.files)} />\r\n      <ReactQuill value={content} onChange={(newValue) => setContent(newValue)} modules={modules} formats={formats} />\r\n      <button style={{ marginTop: \"10px\" }} type=\"submit\">Create Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAE,CACP,CAAC;IAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK;EAAE,CAAC,CAAC,EAC7B,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,EACvD,CAAC;IAAE,MAAM,EAAE;EAAU,CAAC,EAAE;IAAE,MAAM,EAAE;EAAS,CAAC,EAAE;IAAE,QAAQ,EAAE;EAAK,CAAC,EAAE;IAAE,QAAQ,EAAE;EAAK,CAAC,CAAC,EACrF,CAAC,MAAM,EAAE,OAAO,CAAC,EACjB,CAAC,OAAO,CAAC;AAEb,CAAC;AAED,MAAMC,OAAO,GAAG,CACd,QAAQ,EACR,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EACrD,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAC1B,MAAM,EAAE,OAAO,CAChB;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMoB,OAAO,GAAGlB,UAAU,CAAC,CAAC;EAE5B,MAAMmB,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClCA,EAAE,CAACC,cAAc,CAAC,CAAC;IAEnB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,GAAG,CAAC,OAAO,EAAEhB,KAAK,CAAC;IACxBc,IAAI,CAACE,GAAG,CAAC,SAAS,EAAEd,OAAO,CAAC;IAC5BY,IAAI,CAACE,GAAG,CAAC,SAAS,EAAEZ,OAAO,CAAC;IAE5B,IAAIE,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;MAC7BH,IAAI,CAACE,GAAG,CAAC,MAAM,EAAEV,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;IAEAQ,IAAI,CAACE,GAAG,CAAC,UAAU,EAAEE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAEnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAET,IAAI;QACVU,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfhB,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLiB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEP,QAAQ,CAACQ,MAAM,CAAC;QACxD;MACF;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC;IACF;EACF,CAAC;EAED,IAAInB,QAAQ,EAAE;IACZE,OAAO,CAACmB,IAAI,CAAC,GAAG,CAAC;EACnB;EAEA,oBACEnC,OAAA;IAAMoC,QAAQ,EAAEnB,aAAc;IAAAoB,QAAA,gBAC5BrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAElC,KAAM;MAACmC,QAAQ,EAAGvB,EAAE,IAAKX,QAAQ,CAACW,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpG9C,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEhC,OAAQ;MAACiC,QAAQ,EAAGvB,EAAE,IAAKT,UAAU,CAACS,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1G9C,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACG,QAAQ,EAAGvB,EAAE,IAAKL,QAAQ,CAACK,EAAE,CAACwB,MAAM,CAAC9B,KAAK;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE9C,OAAA,CAACH,UAAU;MAAC2C,KAAK,EAAE9B,OAAQ;MAAC+B,QAAQ,EAAGM,QAAQ,IAAKpC,UAAU,CAACoC,QAAQ,CAAE;MAAC9C,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA;IAAQ;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH9C,OAAA;MAAQgD,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAACX,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX,CAAC;AAACzC,EAAA,CAtDID,UAAU;EAAA,QAMEN,UAAU;AAAA;AAAAoD,EAAA,GANtB9C,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}